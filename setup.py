r'''
This is the set up file for bibupdate. In addition to the usual setup tools
functionality this can be used to generate the rst and pdf file versions of the
documentation for the package and to upload everything to PyPI, ctan and bitbucket
The idea is that everything is generated from bibupdate.py to avoid having to
duplicate the same information in different places.

Usage:
    > python setup.py readme   -- generate documentation
    > python setup.py ctan     -- upload package to ctan

    > python setup.py upload   -- upload to PyPI
    > python setup.py develop  -- install bibupdate in 'development mode'


Andrew Mathas andrew.mathas@gmail.com
Copyright (C) 2012, 2014, 2015, 2016
'''

from setuptools import setup
from subprocess import call
import bibupdate, datetime, sys

# the installation requirements depend on the python version, so generate
# them dynamically
install_requires = ['fuzzywuzzy >= 0.2', 'python-levenshtein']

# need to do the following properly...there's no point checking the version
# number on the system creating the distribution.
python_version=sys.version_info[:2]
if python_version < (2,6):
    print('bibupdate requires python 2.6 or later. Please upgrade python.')
    sys.exit(1)
elif python_version==(2,6):
    install_requires += [ 'argparse','ordereddict>=1.1' ]

# for the ctan release log
ctan_specs=r'''# Generated: {today}
contribution=bibupdate
version={version}
name={author}
email={author_email}
summary={description}
directory=/support/bibupdate
DoNotAnnounce=0
announce={description}
notes=Requires python
license=free
freeversion=gpl
file=bibupdate.tar.gz
'''

# for creating the latex and pdf versions of the documentation in the doc directory
preamble=r'''\usepackage[a4paper,margin=20mm]{{geometry}}
\usepackage{{enumitem}}
\setlist[description]{{style=unboxed}}% for long usage line


\usepackage[svgnames]{{xcolor}}
\usepackage{{tikz}}
\usetikzlibrary{{shadows.blur}}
\tikzset{{shadowed/.style={{blur shadow={{shadow blur steps=5}},
                          bottom color=LightSkyBlue!30,
                          draw=MidnightBlue!70,shade,
                          font=\normalfont\Huge\bfseries\scshape,
                          rounded corners=8pt,
                          top color=SkyBlue,
      }},
      boxes/.style={{draw=MidnightBlue,
                    fill=Cornsilk,
                    font=\sffamily\small,
                    inner sep=5pt,
                    rectangle,
                    rounded corners=8pt,
                    text=RoyalBlue,
     }}
}}
\def\section#1{{
  \begin{{tikzpicture}}[remember picture,overlay]
      \node[yshift=-3cm] at (current page.north west)
        {{\begin{{tikzpicture}}[remember picture, overlay]
          \draw[shadowed](30mm,0) rectangle node[white]{{#1}} (\paperwidth-30mm,16mm);
          \node[anchor=west,boxes] at (4cm,0cm) {{ {author} }};
          \node[anchor=east,boxes] at (\paperwidth-4cm,0) {{ Version {version} }};
         \end{{tikzpicture}}
        }};
   \end{{tikzpicture}}
   \vspace*{{20mm}}
}}

\parindent=0pt
\parskip=1em

\makeatletter
\def\@oddfoot{{bibupdate --- Version {version}\hfill\thepage}}
\makeatother

\usepackage[colorlinks=true,linkcolor=blue,urlcolor=blue]{{hyperref}}
\hypersetup{{pdfcreator={{ Generated by python + rst2latex + pdfLaTeX }},
            pdfinfo={{Author  ={{ {author} }},
                     Keywords={{ {keywords} }},
                     License ={{ {license} }},
                     Subject ={{ {description} }},
                     Title   ={{ Bibupdate - version {version} }}
            }},
}}
'''

# generate the rst, tex and pdf version of the README file
if 'readme' in sys.argv:
    with open('README.rst','w') as rst_readme:
      rst_readme.write(bibupdate.__doc__)

    # set --no-doc-title to stop rst2latex from overwriting our custom made document title 
    preamble=' --no-doc-title --latex-preamble="{latex}"'.format(latex=preamble.format( **bibupdate.bibup ))
    call('rst2latex.py {opts} README.rst README.tex'.format(opts=preamble), shell=True)
    call('pdflatex README && pdflatex README', shell=True)

elif 'ctan' in sys.argv:
    bibupdate.bibup['today']='{:%d, %b %Y}'.format(datetime.date.today())
    with open('bibupdate.ctan','w') as ctan:
        ctan.write( ctan_specs.format(**bibupdate.bibup) )
    print('To upload to ctan run: ctanupload -F bibupdate.ctan')  # TODO: automate this?

else:
    setup(name=bibupdate.bibup['name'],
          author=bibupdate.bibup['author'],
          author_email=bibupdate.bibup['author_email'],
          description=bibupdate.bibup['description'],
          keywords=bibupdate.bibup['keywords'],
          license=bibupdate.bibup['license'],
          url=bibupdate.bibup['url'],
          version=bibupdate.bibup['version'],

          long_description=bibupdate.__doc__,

          py_modules = ['bibupate'],

          classifiers=[
              'Development Status :: 5 - Production/Stable',
              'Environment :: Console',
              'Intended Audience :: Science/Research',
              'License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)',
              'Natural Language :: English',
              'Programming Language :: Python :: 2.6+',
              'Programming Language :: Python :: 3',
              'Topic :: Text Processing',
              'Topic :: Text Processing :: Markup :: LaTeX',
              'Topic :: Utilities'
          ],

          install_requires=install_requires,

          entry_points={'console_scripts': ['bibupdate = bibupdate:main', ],},
    )
